import axios from 'axios';

const api = axios.create({
	baseURL: 'https://us.dws3.docmosis.com/api',
});

const API_KEY = 'NDJkYjE3ZDctYTQxYi00YzY0LTlmZTgtZGU0MTBkYzJlMjFkOjA5MjAxMjg';

export const generateDocument = async (
	templateName,
	outputFileName,
	data,
	author
) => {
	const params = {
		accessKey: API_KEY,
		devMode: true,
		templateName: templateName,
		outputName: outputFileName,
		streamResultInResponse: true,
		data: data,
		tags: 'Generated by: ' + author,
	};

	const headers = {
		'content-type': 'application/json',
	};

	try {
		const response = await api.post('/render', params, { headers });
		return response;
	} catch (error) {
		return error;
	}
};

export const getAccountInfo = async () => {
	const params = {
		accessKey: API_KEY,
	};

	const headers = {
		'content-type': 'application/x-www-form-urlencoded',
	};

	try {
		const response = await api.post('/accountSummary', params, { headers });
		return response;
	} catch (error) {
		return error;
	}
};

export const getTemplates = async (reportName) => {
	const params = {
		accessKey: API_KEY,
	};

	const headers = {
		'content-type': 'application/x-www-form-urlencoded',
	};

	try {
		const response = await api.post('/listTemplates', params, { headers });
		

        /*
        if(reportName != null && reportName != "")
		{
			templateList = response.getJSON("templateList").toJSONList();
			returnList = List();
			for each  template in templateList
			{
				if(template.getJSON("name").startsWithIgnoreCase(reportName) && !template.getJSON("name").endsWith("/"))
				{
					oldName = template.getJSON("name");
					template.remove("name");
					template.put("name",oldName.replaceAllIgnoreCase(reportName + "/",""));
					returnList.add(template);
				}
			}
			return returnList;
		}
        */
        return response;

	} catch (error) {
		return error;
	}
};
